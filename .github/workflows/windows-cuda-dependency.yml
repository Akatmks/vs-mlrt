name: Upload vs-mlrt-cuda dependencies

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'which tag to upload to'
        required: true
        default: 'v100'
  workflow_call:
    inputs:
      tag:
        description: 'which tag to upload to'
        required: true
        type: string
    secrets:
      REPO_TOKEN:
        required: true
    outputs:
      runID:
        description: 'run id'
        value: ${{ jobs.build-windows.outputs.runID }}

jobs:
  build-windows:
    runs-on: windows-2022
    outputs:
      runID: ${{ steps.output.outputs.runID }}

    defaults:
      run:
        shell: bash

    steps:
    # Note: unfortunately, cuDNN download requires registration and according to its license
    # agreements, we can only redistribute it along with an application that uses it, so we
    # have to use a private repository to hold a copy of the library.
    - name: Download cuDNN inference library
      run: |
        # https://stackoverflow.com/questions/20396329/how-to-download-github-release-from-private-repo-using-command-line/35688093#35688093

        tag=cudnn-8.3.2-bin
        name=cudnn.7z

        AUTH="Authorization: token ${{ secrets.REPO_TOKEN }}"
        response=$(curl -sH "$AUTH" https://api.github.com/repos/AmusementClub/cuda/releases/tags/$tag)
        eval $(echo "$response" | grep -C3 "name.:.\+$NAME" | grep -w id | tr : = | tr -cd '[[:alnum:]]=')
        [ "$id" ] || { echo "Error: Failed to get asset id, response: $response" | awk 'length($0)<100' >&2; exit 1; }
        ASSET="https://api.github.com/repos/AmusementClub/cuda/releases/assets/$id"
        curl -LJO -H "$AUTH" -H 'Accept: application/octet-stream' "$ASSET"

    - name: Extract cuDNN library
      run: 7z x cudnn.7z

    - name: Move cuDNN library
      run: mv cudnn/bin vsmlrt-cuda

    # Same licensing issue with the tensorrt libraries.
    - name: Download TensorRT library
      run: |
        # https://stackoverflow.com/questions/20396329/how-to-download-github-release-from-private-repo-using-command-line/35688093#35688093

        tag=tensorrt-8.4.0-ea-bin
        name=TensorRT.7z

        AUTH="Authorization: token ${{ secrets.REPO_TOKEN }}"
        response=$(curl -sH "$AUTH" https://api.github.com/repos/AmusementClub/cuda/releases/tags/$tag)
        eval $(echo "$response" | grep -C3 "name.:.\+$NAME" | grep -w id | tr : = | tr -cd '[[:alnum:]]=')
        [ "$id" ] || { echo "Error: Failed to get asset id, response: $response" | awk 'length($0)<100' >&2; exit 1; }
        ASSET="https://api.github.com/repos/AmusementClub/cuda/releases/assets/$id"
        curl -LJO -H "$AUTH" -H 'Accept: application/octet-stream' "$ASSET"

        mv "$name" trt.7z

    - name: Extract TensorRT library
      run: 7z x trt.7z

    - name: Move TensorRT library
      run: mv trt-*/*.dll vsmlrt-cuda

    - name: Download CUDA Libraries
      shell: cmd
      run: |
        curl -s -o cuda_installer.exe -L https://developer.download.nvidia.com/compute/cuda/11.6.1/network_installers/cuda_11.6.1_windows_network.exe
        cuda_installer.exe -s cudart_11.6 cublas_11.6 cufft_11.6 cupti_11.6 nvrtc_11.6

    - name: Move CUDA Libraries
      shell: cmd
      run: |
        move "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.6\extras\CUPTI\lib64\cupti*.dll" vsmlrt-cuda
        move "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.6\bin\*.dll" vsmlrt-cuda
        del vsmlrt-cuda\cudart32*.dll

    - name: Cache zlib
      id: cache-zlib
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/zlib-release
        key: ${{ runner.os }}-zlib-1.2.11

    - name: Setup msbuild
      if: steps.cache-zlib.outputs.cache-hit != 'true'
      uses: microsoft/setup-msbuild@v1

    - name: Compile zlib
      if: steps.cache-zlib.outputs.cache-hit != 'true'
      run: |
        curl -s -o zlib.tar.gz -LJO https://www.zlib.net/zlib-1.2.11.tar.gz
        tar -xf zlib.tar.gz
        cd zlib-1.2.11
        msbuild contrib\vstudio\vc14\zlibvc.sln /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v143 -maxCpuCount
        cd ..
        mkdir zlib-release
        move zlib-1.2.11\contrib\vstudio\vc14\x64\ZlibDllRelease\zlibwapi.dll zlib-release

    - name: Move zlib
      shell: cmd
      run: move zlib-release\zlibwapi.dll vsmlrt-cuda

    - name: Compress
      run: |
        7z a -t7z -mx=3 vsmlrt-cuda.7z vsmlrt-cuda

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: vsmlrt-cuda
        path: vsmlrt-cuda.7z
        retention-days: 1

    - name: Rename release asset
      run: |
        mv vsmlrt-cuda.7z vsmlrt-cuda.${{ github.event.inputs.tag}}.7z

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.tag }}
        files: vsmlrt-cuda.${{ github.event.inputs.tag }}.7z
        fail_on_unmatched_files: true
        generate_release_notes: false
        prerelease: true

    - name: Output run-id
      id: output
      shell: bash
      run: echo "::set-output name=runID::$GITHUB_RUN_ID"
